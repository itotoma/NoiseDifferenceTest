library(ggplot2)
library(reshape2)
#Reference: https://github.com/andrewheiss/Attitudes-in-the-Arab-World/blob/master/figure12.R

###mean & noise version
#HeatmapDF from MainAnalysis
HeatmapDf = HeatmapDf %>% right_join(RedundautTargets, by=c("Gene"="V2"))

DfMode = 1
if(DfMode){
  data = HeatmapDf %>% column_to_rownames("Gene") %>% select(noise, mean) %>% as.matrix()
  df  <- melt(data) %>% setNames(c("Gene", "Group", "Value")) %>% 
    left_join(HeatmapDf, by=c("Gene")) %>% 
    mutate(star = ifelse((r1 != "NoDiff") & (Group == "mean"), "*", "")) %>% 
    mutate(star = ifelse((r2 != "NoDiff") & (Group == "noise"), "*", "")) %>% 
    select(Gene, Group, Value, star)
  #Clustering and rearrange
}


###noise by each media version
ListMode = 1
if(ListMode){
  RedundautTargets = data.frame(V2 = c("AGP1", "BAP2", "BAP3", "DIP5", "GNP1", "MUP1", "TAT1", "TAT2", "PTR2"))
  data = ResDispList %>% lapply(function(df){
    df %>% right_join(yeast_gene_name, by=c("GeneName"="ORF")) %>% 
      #mutate(ProbDiffMean = ifelse(MeanLog2FC < 0 , -1*ProbDiffMean, ProbDiffMean)) %>% 
      filter(is.element(Name, RedundautTargets$V2)) %>% 
      select(Name, ResDispDistance, ResultDiffResDisp) %>% 
      mutate(ResultDiffResDisp = ifelse(ResultDiffResDisp != "NoDiff", "*" , "")) %>% 
      arrange(Name) %>% 
      setNames(c("Name", "Value", "Result")) %>% 
      return()}
  ) %>% do.call(cbind.data.frame,.)
  
  Clustering = FALSE
  NaOmit = TRUE
  if(NaOmit){
    data = data %>% na.omit()
    data2 = data[,-1*c(grep("Name",names(data)), grep("Result",names(data)))]
    Cluster = TRUE
  }
  
  df = lapply(dirlist, function(dir){
    print(dir)
    data[,grep(dir,names(data))] %>% setNames(c("Gene", "Value", "star")) %>% return()
  }) %>% do.call(rbind.data.frame,.) %>% rownames_to_column() %>% setNames(c("Group", "Gene", "Value", "star")) %>% 
    mutate(Group = gsub(".\\d", "", Group)) %>% mutate(Group = gsub("\\d", "", Group))
}


dev.new()
clr <- heatmap(ClusteredData, scale = "none")
dev.off()
gene.idx  <- rownames(ClusteredData)[clr$rowInd]
group.idx <- colnames(ClusteredData)[clr$colInd]
df$Gene  <- factor(df$Gene, levels = gene.idx)
df$Group <- factor(df$Group, levels = rev(c("MinimalEtOH", "MinimalGlucose", "Glutamine", "Urea", "YPDRapa", "YPDDiauxic", "Proline", "AmmoniumSulfate", "YPEtOH", "YPD", "CStarve")))
#df$Group <- factor(df$Group, levels = group.idx)

#generate heatmap
ghm <- ggplot(df, aes(x = Gene, y = Group, fill = Value)) + 
  geom_tile() + theme_bw() + 
  geom_text(aes(label=star),color="black", size=5) + 
  theme(plot.background = element_blank(),
                   panel.grid.minor = element_blank(),
                   panel.grid.major = element_blank(),
                   panel.background = element_blank(),
                   axis.line = element_blank(),
                   axis.ticks = element_blank(),
                   strip.background = element_rect(fill = "white", colour = "white"),
                   #axis.text.x = element_blank()
                   axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)
                  )
ghm <- ghm + xlab("Genes") + ylab("") + 
  scale_fill_gradient2(low="#00A0E9", mid="white",high="#E60012") + 
  scale_x_discrete(expand = c(0, 0)) + scale_y_discrete(expand = c(0, 0)) + 
  ggtitle("Redundant Regulated by STP1 and STP2")
ghm

#NoiseDiffProbByMedia 500 x 400


for(dir in dirlist){
  print(dir)
  scDDresultData = read.csv(file.path(dir,"scDDtest_WTvsSTP2.csv"))
  RedundantORFs = yeast_gene_name %>% filter(is.element(Name, RedundautTargets$V2)) %>% nth(2)
  scDDresultData %>% filter(is.element(gene, RedundantORFs)) %>% select(gene, DDcategory) %>% print()
}
